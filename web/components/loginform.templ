package components

import "fmt"

type LoginFormModel struct {
	EmailVal,
	EmailErr,
	PasswordVal,
	PasswordErr,
	ServerErr string
}

templ Loginform(model LoginFormModel) {
	<form
		class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4"
		hx-post="/login"
		hx-trigger="submit"
		hx-swap="outerHTML"
	>
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="email">
				Email
			</label>
			<div x-data={ fmt.Sprintf("{errorMessage: '%s'}", model.EmailErr) }>
				<input
					name="email"
					type="email"
					placeholder="Email"
					value={ model.EmailVal }
					class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-1 leading-tight focus:outline-none"
					:class="{'border-red-500': errorMessage}"
					@input="errorMessage=''"
				/>
				<p class="text-red-500 text-xs italic" x-text="errorMessage"></p>
			</div>
		</div>
		<div class="mb-6">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="password">
				Password
			</label>
			<div x-data={ fmt.Sprintf("{errorMessage: '%s'}", model.PasswordErr) }>
				<input
					name="password"
					type="password"
					placeholder="Password"
					value={ model.PasswordVal }
					class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-1 leading-tight focus:outline-none"
					:class="{'border-red-500': errorMessage}"
					@input="errorMessage=''"
				/>
				<p class="text-red-500 text-xs italic" x-text="errorMessage"></p>
			</div>
		</div>
		<div class="flex items-center justify-between">
			<button class="bg-sky-600 hover:bg-sky-700 text-white font-bold py-2 px-4 rounded focus:outline-none" type="submit">
				Sign In
			</button>
			<a class="inline-block align-baseline font-bold text-sm text-sky-600 hover:text-sky-700" href="#">
				Forgot Password?
			</a>
		</div>
		if model.ServerErr != "" {
			@ErrorNotification(model.ServerErr)
		}
	</form>
}
